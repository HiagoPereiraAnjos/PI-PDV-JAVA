/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.lojadeinstrumentos.view;

import com.google.protobuf.StringValue;
import com.mycompany.lojadeinstrumentos.dao.ClienteDAO;
import com.mycompany.lojadeinstrumentos.dao.VendaDAO;
import com.mycompany.lojadeinstrumentos.model.ModeloCadastroProduto;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import com.mycompany.lojadeinstrumentos.model.ModeloCadastroCliente;
import com.mycompany.lojadeinstrumentos.model.ModeloCadastroCliente;
import com.mycompany.lojadeinstrumentos.model.ModeloCadastroProduto;
import com.mycompany.lojadeinstrumentos.model.ModeloItem;
import com.mycompany.lojadeinstrumentos.model.ModeloVenda;
import com.mycompany.lojadeinstrumentos.model.ModeloVenda;
import com.mycompany.lojadeinstrumentos.view.CadastroClienteProduto;
import com.mycompany.lojadeinstrumentos.view.Menu;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Date;
import java.util.regex.Pattern;
import com.mycompany.lojadeinstrumentos.dao.ProdutoDAO;

/**
 *
 * @author alexs
 */
public class TelaVendas extends javax.swing.JFrame {

    /**
     * Creates new form TelaVendas
     */
    ModeloVenda modeloVenda = new ModeloVenda();
    ArrayList<CadastroClienteProduto> listamodelo = new ArrayList<>();
    
    ModeloVenda venda = new ModeloVenda();
    ModeloItem item = new ModeloItem();
    ModeloCadastroProduto produto = new ModeloCadastroProduto();
    ModeloCadastroCliente cliente = new ModeloCadastroCliente();
    CadastroClienteProduto cadastro = new CadastroClienteProduto();
    
    public TelaVendas() {
        
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    private void atualizarValorTotal(DefaultTableModel modelo) {
        double totalFinal = 0.0;
        int colunaValorTotal = 5; // √çndice da coluna com o valor a ser somado

        for (int i = 0; i < modelo.getRowCount(); i++) {
            double valorColuna = Double.parseDouble(modelo.getValueAt(i, colunaValorTotal).toString());
            totalFinal += valorColuna;
        }
        
        lblValorTotal.setText(String.valueOf(totalFinal));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblCPFCLiente = new javax.swing.JLabel();
        data = new javax.swing.JLabel();
        Produto = new javax.swing.JLabel();
        txtProdutoVenda = new javax.swing.JTextField();
        Quantidade = new javax.swing.JLabel();
        ValorPorItem = new javax.swing.JLabel();
        ValorTotal = new javax.swing.JLabel();
        itensVenda = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItensVenda = new javax.swing.JTable();
        btnCancelarVenda = new javax.swing.JButton();
        btnFinalizarVenda = new javax.swing.JButton();
        btnAcrescentar = new javax.swing.JButton();
        btnExcluirItemVenda = new javax.swing.JButton();
        ftxtCPFCliente = new javax.swing.JFormattedTextField();
        btnLimparVenda = new javax.swing.JButton();
        txtQuantidadeVenda = new javax.swing.JTextField();
        lblValorItem = new javax.swing.JLabel();
        lblValorTotal = new javax.swing.JLabel();
        lblData = new java.awt.Label();
        jLabel1 = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        lblQtdProduto = new javax.swing.JLabel();
        lblNomeProduto = new javax.swing.JLabel();
        lblNomeCliente = new javax.swing.JLabel();
        label2 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Venda");

        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        lblCPFCLiente.setText("CPF Cliente:");

        data.setText("Data: ");

        Produto.setText("Produto:");

        txtProdutoVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtProdutoVendaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtProdutoVendaFocusLost(evt);
            }
        });
        txtProdutoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProdutoVendaActionPerformed(evt);
            }
        });
        txtProdutoVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProdutoVendaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProdutoVendaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProdutoVendaKeyTyped(evt);
            }
        });

        Quantidade.setText("Quantidade:");

        ValorPorItem.setText("Valor p/ item:");

        ValorTotal.setText("Valor Total Final  :");

        itensVenda.setText("Itens da Venda :");

        tblItensVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id Cliente", "produto", "Valor", "quantidade", "ID produto", "Valor total/item"
            }
        ));
        jScrollPane2.setViewportView(tblItensVenda);

        btnCancelarVenda.setText("Cancelar Venda");
        btnCancelarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarVendaActionPerformed(evt);
            }
        });

        btnFinalizarVenda.setText("Finalizar venda");
        btnFinalizarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarVendaActionPerformed(evt);
            }
        });

        btnAcrescentar.setText("Acrescentar");
        btnAcrescentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcrescentarActionPerformed(evt);
            }
        });

        btnExcluirItemVenda.setText("Excluir ");
        btnExcluirItemVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirItemVendaActionPerformed(evt);
            }
        });

        try {
            ftxtCPFCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtCPFCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ftxtCPFClienteFocusLost(evt);
            }
        });
        ftxtCPFCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtCPFClienteActionPerformed(evt);
            }
        });
        ftxtCPFCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ftxtCPFClienteKeyTyped(evt);
            }
        });

        btnLimparVenda.setText("Limpar");
        btnLimparVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparVendaActionPerformed(evt);
            }
        });

        txtQuantidadeVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQuantidadeVendaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQuantidadeVendaFocusLost(evt);
            }
        });
        txtQuantidadeVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeVendaActionPerformed(evt);
            }
        });
        txtQuantidadeVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQuantidadeVendaKeyTyped(evt);
            }
        });

        lblValorTotal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel1.setText("Produto");

        label1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label1.setText("quantidade produto\n");

        label2.setText("nome cliente");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ftxtCPFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCPFCLiente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(108, 108, 108)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Quantidade))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblValorItem, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ValorPorItem))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(lblQtdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQuantidadeVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(329, 329, 329))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAcrescentar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(data)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblData, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Produto))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLimparVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluirItemVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnFinalizarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelarVenda)
                .addGap(439, 439, 439))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itensVenda)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblCPFCLiente)
                        .addComponent(lblNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtQuantidadeVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Quantidade)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ftxtCPFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblQtdProduto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Produto)
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnAcrescentar)
                                .addComponent(data)))
                        .addGap(46, 46, 46)
                        .addComponent(itensVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(ValorPorItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblValorItem, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnCancelarVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFinalizarVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLimparVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExcluirItemVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(ValorTotal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                        .addComponent(lblValorTotal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 double totalFinal = 0;
 private int getTotalQuantidadeProdutoNaTabela(int idProduto) {
    int quantidadeTotal = 0;
   if (tblItensVenda.getRowCount() > 0) {
    for (int i = 0; i < tblItensVenda.getRowCount(); i++) {
        int idProdutoNaTabela = Integer.parseInt(tblItensVenda.getValueAt(i, 4).toString());
        int quantidadeNaTabela = Integer.parseInt(tblItensVenda.getValueAt(i, 3).toString());
        if (idProdutoNaTabela == idProduto) {
            quantidadeTotal += quantidadeNaTabela;
        }}
    }
    return quantidadeTotal;
}
    private void btnAcrescentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcrescentarActionPerformed
        if (txtQuantidadeVenda.getText().isEmpty() || txtProdutoVenda.getText().isEmpty() || ftxtCPFCliente.getValue() == null) {
            JOptionPane.showMessageDialog(null, "Obrigat√≥rio preencher todos os campos!");
        } else {
            int qtd = Integer.parseInt(lblQtdProduto.getText());
            int quantidadeVenda = Integer.parseInt(txtQuantidadeVenda.getText());
            
            if (quantidadeVenda > qtd) {
                JOptionPane.showMessageDialog(null, "A QUANTIDADE SOLICITADA √â MAIOR DO QUE A PRESENTE NO ESTOQUE!!");
            } else {
                int atualizado = qtd - quantidadeVenda;
                lblQtdProduto.setText(String.valueOf(atualizado));

                // Obtendo a data atual
                LocalDate dataVenda = LocalDate.now();
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
                String dataVendaFormatada = dataVenda.format(formatter);
                lblData.setText(dataVendaFormatada);
                
                String cpfPesquisar = ftxtCPFCliente.getText();
                ModeloCadastroCliente objCPFPesquisar = new ModeloCadastroCliente();
                objCPFPesquisar.setCpfCadastroCliente(cpfPesquisar);
                ModeloCadastroCliente objQueVemDAOCliente = ClienteDAO.filtro(objCPFPesquisar);
                int idCliente = objQueVemDAOCliente.getIdCliente();
                
                int idprodutoPesquisar = Integer.parseInt(txtProdutoVenda.getText());
                
                 
                ModeloCadastroProduto objParaFiltro = new ModeloCadastroProduto();
                objParaFiltro.setIdProdutoCadastroProduto(idprodutoPesquisar);
                ModeloCadastroProduto pesquisarProd = ProdutoDAO.consultarPorID(objParaFiltro);
                double valorTotalPorItem = quantidadeVenda * pesquisarProd.getValorProdutoCadastroProduto();
                
                int qtdProduto = pesquisarProd.getQntdProdutoCadastroProduto();
                lblQtdProduto.setText(String.valueOf(qtdProduto));
                totalFinal += valorTotalPorItem;
                
                int verificarQTD=getTotalQuantidadeProdutoNaTabela(idprodutoPesquisar);
                
                if(verificarQTD+(Integer.parseInt(txtQuantidadeVenda.getText()))> Integer.parseInt(lblQtdProduto.getText())){
                JOptionPane.showMessageDialog(null, "A quantidade √© maior do que a tem presente no banco!! ");
                JOptionPane.showMessageDialog(null, "verifique na tabela de vendas e exclua o produto ou cadastre mais produtos no estoque !! ");
                        
                
                }else {
                DefaultTableModel modelo = (DefaultTableModel) tblItensVenda.getModel();
                modelo.addRow(new String[]{
                    String.valueOf(idCliente),
                    lblNomeProduto.getText(),
                    String.valueOf(lblValorItem.getText()),
                    String.valueOf(quantidadeVenda),
                    String.valueOf(idprodutoPesquisar),
                    String.valueOf(valorTotalPorItem)
                });
                
                atualizarValorTotal(modelo);
            }}
        }

    }//GEN-LAST:event_btnAcrescentarActionPerformed

    private void btnCancelarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarVendaActionPerformed
        Menu novoMenu = new Menu();
        novoMenu.setVisible(true);
        
        this.dispose();

// TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarVendaActionPerformed

    private void ftxtCPFClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtCPFClienteActionPerformed
        cliente.setCpfCadastroCliente((ftxtCPFCliente.getText()));
    }//GEN-LAST:event_ftxtCPFClienteActionPerformed

    private void txtProdutoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProdutoVendaActionPerformed
        produto.setNomeProdutoCadastroProduto(txtProdutoVenda.getText());
    }//GEN-LAST:event_txtProdutoVendaActionPerformed

    private void txtQuantidadeVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeVendaActionPerformed
        item.setQtdProduto(Integer.parseInt(txtQuantidadeVenda.getText()));
    }//GEN-LAST:event_txtQuantidadeVendaActionPerformed

    private void btnLimparVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparVendaActionPerformed
        lblCPFCLiente.setText("");
        lblNomeCliente.setText("");
        lblValorItem.setText("");
        lblValorTotal.setText("");
        lblNomeProduto.setText("");
        lblQtdProduto.setText("");
        ftxtCPFCliente.setText("");
        txtProdutoVenda.setText("");
        // ftxtDataVenda.setText("");
        txtQuantidadeVenda.setText("");
        // txtValorItemVenda.setText("");
    }//GEN-LAST:event_btnLimparVendaActionPerformed

    private void btnExcluirItemVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirItemVendaActionPerformed
        if (tblItensVenda.getSelectedRow() != -1) {
            int linhaSelecionada = tblItensVenda.getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) tblItensVenda.getModel();
            double valorExcluido = Double.parseDouble(modelo.getValueAt(linhaSelecionada, 5).toString());
            modelo.removeRow(linhaSelecionada);
            
            atualizarValorTotal(modelo);
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma linha da tabela para excluir!");
        }
    }//GEN-LAST:event_btnExcluirItemVendaActionPerformed

    private void txtQuantidadeVendaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantidadeVendaKeyTyped
        //apenas numeros no campo quantidade
        char c = evt.getKeyChar();
        
        if ((c < '0' || c > '9') && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Digite apenas numeros no campo quantidade!");
            
        }
        //Quantidade de caracteres no campo QNTD
        if (txtQuantidadeVenda.getText().length() > 9) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "M√°ximo de 10 caracteres no campo quantidade!");
        }
    }//GEN-LAST:event_txtQuantidadeVendaKeyTyped

    private void txtProdutoVendaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdutoVendaKeyTyped
        char c = evt.getKeyChar();
        
        if ((c < '0' || c > '9') && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Digite apenas numeros no campo produto!");
            
        }
        //Quantidade de caracteres no campo QNTD
        if (txtProdutoVenda.getText().length() > 3) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "M√°ximo de 4 caracteres no campo produto!");
        }
    }//GEN-LAST:event_txtProdutoVendaKeyTyped

    private void txtProdutoVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdutoVendaKeyReleased

    }//GEN-LAST:event_txtProdutoVendaKeyReleased

    private void ftxtCPFClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ftxtCPFClienteKeyTyped
        char c = evt.getKeyChar();
        
        if ((c < '0' || c > '9') && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Digite apenas n√∫meros no campo CPF!");
        }
        if (ftxtCPFCliente.getText().length() == 11) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "M√°ximo de 11 caracteres no campo CPF!");
        }
    }//GEN-LAST:event_ftxtCPFClienteKeyTyped

    private void btnFinalizarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarVendaActionPerformed
        /* validando se a pessoa quer finalizar a venda se a resposta for sim, o Joption retorna 0 dai chama a tela de menu novamente   */
        int resposta = JOptionPane.showConfirmDialog(null, " Deseja finalizar a venda  ?");
        
        if (resposta == 0) {
            ModeloVenda mudarBancoVenda = new ModeloVenda();
            ModeloVenda objQueVemDAOproduto;
        }
        
        ArrayList<ModeloItem> listaItens = new ArrayList<ModeloItem>();
        
        if (tblItensVenda.getRowCount() > 0) {
            for (int i = 0; i < tblItensVenda.getRowCount(); i++) {
                
                ModeloItem item = new ModeloItem();
                
                item.setNomeProduto((tblItensVenda.getValueAt(i, 1).toString()));
                item.setValorProduto(Double.parseDouble(tblItensVenda.getValueAt(i, 2).toString()));
                item.setQtdProduto(Integer.parseInt(tblItensVenda.getValueAt(i, 3).toString()));
                item.setIdProduto(Integer.parseInt(tblItensVenda.getValueAt(i, 4).toString()));
                
                listaItens.add(item);
                
            }
            
            LocalDate data = LocalDate.parse(lblData.getText(), DateTimeFormatter.ofPattern("dd-MM-yyyy"));
            
            Date dataVenda = java.sql.Date.valueOf(data);
            
            ModeloVenda objVenda = new ModeloVenda();
            
            objVenda.setidCliente(Integer.parseInt(tblItensVenda.getValueAt(0, 0).toString()));
            objVenda.setValortotal(Double.valueOf(lblValorTotal.getText()));
            objVenda.setDataVenda(dataVenda);
            objVenda.setListaItens(listaItens);
            
            boolean retorno = VendaDAO.finalizarVenda(objVenda);
            /* validar vendas com mais produtos, esta vendendo mesmo que nao tenha */
            if (retorno) {
                JOptionPane.showMessageDialog(rootPane, "Sucesso na venda!");
                TelaVendas telaVenda = new TelaVendas();
                telaVenda.setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Falha na venda !");
            }
        } else {
            JOptionPane.showMessageDialog(null, "configura√ßao de venda invalida!!");
        }
    }//GEN-LAST:event_btnFinalizarVendaActionPerformed

    private void txtProdutoVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProdutoVendaFocusLost
        ModeloCadastroProduto objParaFiltro = new ModeloCadastroProduto();
        
        if (!txtProdutoVenda.getText().trim().equals("")) {
            
            int idprodutoPesquisar = Integer.parseInt(txtProdutoVenda.getText());
            
            objParaFiltro.setIdProdutoCadastroProduto(idprodutoPesquisar);
            /*aqui o id do produto melhor para pesquisar pq o vendedor vai esta trabalhando o dia inteiro com esses id e com isso ficara mais pratica a venda */
            ModeloCadastroProduto pesquisarProd = ProdutoDAO.consultarPorID(objParaFiltro);
            
            if (pesquisarProd == null) {
                
                JOptionPane.showMessageDialog(null, "nao existe esse produto no banco de dados!");
                 btnAcrescentar.setEnabled(false);
                
            }
            if (pesquisarProd != null) {
                 btnAcrescentar.setEnabled(true);
                lblNomeProduto.setText(pesquisarProd.getNomeProdutoCadastroProduto());
                lblValorItem.setText(String.valueOf(pesquisarProd.getValorProdutoCadastroProduto()));
                if (txtQuantidadeVenda.getText().isEmpty()) {
                    lblQtdProduto.setText(String.valueOf(pesquisarProd.getQntdProdutoCadastroProduto()));
                    
                }                
            }
        }     // TODO add your handling code here:
    }//GEN-LAST:event_txtProdutoVendaFocusLost

    private void ftxtCPFClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ftxtCPFClienteFocusLost
        String cpfPesquisar = ftxtCPFCliente.getText();
        
        ModeloCadastroCliente objCPFPesquisar = new ModeloCadastroCliente();
        
        objCPFPesquisar.setCpfCadastroCliente(cpfPesquisar);
        
        ModeloCadastroCliente objQueVemDAOCliente = ClienteDAO.filtro(objCPFPesquisar);
        
        if (objQueVemDAOCliente.getNomeCadastroCliente() == null) {
            JOptionPane.showMessageDialog(null, "nao existe esse CPF no banco de dados!");
            btnAcrescentar.setEnabled(false);
        } else {
            String Nome = objQueVemDAOCliente.getNomeCadastroCliente();
            
            int idCliente = objQueVemDAOCliente.getIdCliente();
            
            lblNomeCliente.setText(String.valueOf(Nome));
            btnAcrescentar.setEnabled(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ftxtCPFClienteFocusLost

    private void txtProdutoVendaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdutoVendaKeyPressed
        

    }//GEN-LAST:event_txtProdutoVendaKeyPressed

    private void txtQuantidadeVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantidadeVendaFocusLost
        if (lblNomeProduto.getText().equals("")||lblNomeCliente.getText().equals("")) { btnAcrescentar.setEnabled(false);
        } else if (txtQuantidadeVenda.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "digite uma quatidade!");
        } else {
            int qtd = Integer.parseInt(lblQtdProduto.getText());
            
            if (Integer.parseInt(txtQuantidadeVenda.getText()) > qtd) {
                
                JOptionPane.showMessageDialog(null, "A QUANTIDADE SOLICITADA √â MAIOR DO QUE A PRESENTE NO ESTOQUE!!");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeVendaFocusLost

    private void txtProdutoVendaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProdutoVendaFocusGained
        
        lblValorItem.setText("");
        lblValorTotal.setText("");
        lblNomeProduto.setText("");
        lblQtdProduto.setText("");
        txtProdutoVenda.setText("");
        // ftxtDataVenda.setText("");
        txtQuantidadeVenda.setText("");

        // TODO add your handling code here:
    }//GEN-LAST:event_txtProdutoVendaFocusGained

    private void txtQuantidadeVendaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantidadeVendaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeVendaFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaVendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Produto;
    private javax.swing.JLabel Quantidade;
    private javax.swing.JLabel ValorPorItem;
    private javax.swing.JLabel ValorTotal;
    private javax.swing.JButton btnAcrescentar;
    private javax.swing.JButton btnCancelarVenda;
    private javax.swing.JButton btnExcluirItemVenda;
    private javax.swing.JButton btnFinalizarVenda;
    private javax.swing.JButton btnLimparVenda;
    private javax.swing.JLabel data;
    private javax.swing.JFormattedTextField ftxtCPFCliente;
    private javax.swing.JLabel itensVenda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JLabel lblCPFCLiente;
    private java.awt.Label lblData;
    private javax.swing.JLabel lblNomeCliente;
    private javax.swing.JLabel lblNomeProduto;
    private javax.swing.JLabel lblQtdProduto;
    private javax.swing.JLabel lblValorItem;
    private javax.swing.JLabel lblValorTotal;
    private javax.swing.JTable tblItensVenda;
    private javax.swing.JTextField txtProdutoVenda;
    private javax.swing.JTextField txtQuantidadeVenda;
    // End of variables declaration//GEN-END:variables
}
